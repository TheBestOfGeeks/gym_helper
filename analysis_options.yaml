# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - await_only_futures
    - avoid_annotating_with_dynamic
    - avoid_positional_boolean_parameters
    - avoid_relative_lib_imports
    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_slow_async_io
    - always_declare_return_types
    - cancel_subscriptions
    - empty_statements
    - no_logic_in_create_state
    - throw_in_finally
    - unnecessary_statements
    - use_build_context_synchronously
    - avoid_void_async
    - avoid_unused_constructor_parameters
    - empty_catches
    - always_specify_types
    - close_sinks
    - valid_regexps
    - combinators_ordering
    - comment_references
    - invalid_case_patterns
    - library_annotations
    - one_member_abstracts
    - only_throw_errors
    - missing_whitespace_between_adjacent_strings
    - null_check_on_nullable_type_parameter
    - prefer_const_declarations
    - prefer_contains
    - prefer_final_fields
    - prefer_final_in_for_each
    - sized_box_shrink_expand
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_late
    - unnecessary_getters_setters
    - prefer_final_locals
    - prefer_foreach
    - prefer_if_null_operators
    - unnecessary_constructor_name

    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

analyzer:
  plugins:
    - dart_code_metrics

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 4
    maximum-nesting-level: 5
  metrics-exclude:
    - test/**
  rules:
    - avoid-dynamic
    - avoid-passing-async-when-sync-expected
    - avoid-redundant-async
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - avoid-nested-conditional-expressions
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
    - prefer-moving-to-variable
    # - prefer-match-file-name
  rules-exclude:
    - lib/generated/intl/messages_all.dart
    - lib/generated/intl/messages_en.dart
    - lib/generated/l10n.dart
